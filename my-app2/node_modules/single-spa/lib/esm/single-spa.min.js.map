{"version":3,"file":"single-spa.min.js","sources":["../../node_modules/custom-event/index.js","../../src/applications/app-errors.js","../../src/applications/app.helpers.js","../../src/utils/assign.js","../../src/utils/find.js","../../src/lifecycles/lifecycle.helpers.js","../../src/lifecycles/bootstrap.js","../../src/lifecycles/unmount.js","../../src/lifecycles/mount.js","../../src/parcels/mount-parcel.js","../../src/lifecycles/update.js","../../src/lifecycles/prop.helpers.js","../../src/applications/timeouts.js","../../src/lifecycles/load.js","../../src/utils/runtime-environment.js","../../src/navigation/navigation-events.js","../../src/jquery-support.js","../../src/lifecycles/unload.js","../../src/applications/apps.js","../../src/navigation/reroute.js","../../src/start.js","../../src/devtools/devtools.js","../../src/single-spa.js"],"sourcesContent":["\nvar NativeCustomEvent = global.CustomEvent;\n\nfunction useNative () {\n  try {\n    var p = new NativeCustomEvent('cat', { detail: { foo: 'bar' } });\n    return  'cat' === p.type && 'bar' === p.detail.foo;\n  } catch (e) {\n  }\n  return false;\n}\n\n/**\n * Cross-browser `CustomEvent` constructor.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent.CustomEvent\n *\n * @public\n */\n\nmodule.exports = useNative() ? NativeCustomEvent :\n\n// IE >= 9\n'undefined' !== typeof document && 'function' === typeof document.createEvent ? function CustomEvent (type, params) {\n  var e = document.createEvent('CustomEvent');\n  if (params) {\n    e.initCustomEvent(type, params.bubbles, params.cancelable, params.detail);\n  } else {\n    e.initCustomEvent(type, false, false, void 0);\n  }\n  return e;\n} :\n\n// IE <= 8\nfunction CustomEvent (type, params) {\n  var e = document.createEventObject();\n  e.type = type;\n  if (params) {\n    e.bubbles = Boolean(params.bubbles);\n    e.cancelable = Boolean(params.cancelable);\n    e.detail = params.detail;\n  } else {\n    e.bubbles = false;\n    e.cancelable = false;\n    e.detail = void 0;\n  }\n  return e;\n}\n","import { objectType, toName } from \"./app.helpers\";\n\nlet errorHandlers = [];\n\nexport function handleAppError(err, app, newStatus) {\n  const transformedErr = transformErr(err, app, newStatus);\n\n  if (errorHandlers.length) {\n    errorHandlers.forEach((handler) => handler(transformedErr));\n  } else {\n    setTimeout(() => {\n      throw transformedErr;\n    });\n  }\n}\n\nexport function addErrorHandler(handler) {\n  if (typeof handler !== \"function\") {\n    throw Error(\n      formatErrorMessage(\n        28,\n        __DEV__ && \"a single-spa error handler must be a function\"\n      )\n    );\n  }\n\n  errorHandlers.push(handler);\n}\n\nexport function removeErrorHandler(handler) {\n  if (typeof handler !== \"function\") {\n    throw Error(\n      formatErrorMessage(\n        29,\n        __DEV__ && \"a single-spa error handler must be a function\"\n      )\n    );\n  }\n\n  let removedSomething = false;\n  errorHandlers = errorHandlers.filter((h) => {\n    const isHandler = h === handler;\n    removedSomething = removedSomething || isHandler;\n    return !isHandler;\n  });\n\n  return removedSomething;\n}\n\nexport function formatErrorMessage(code, msg, ...args) {\n  return `single-spa minified message #${code}: ${\n    msg ? msg + \" \" : \"\"\n  }See https://single-spa.js.org/error/?code=${code}${\n    args.length ? `&arg=${args.join(\"&arg=\")}` : \"\"\n  }`;\n}\n\nexport function transformErr(ogErr, appOrParcel, newStatus) {\n  const errPrefix = `${objectType(appOrParcel)} '${toName(\n    appOrParcel\n  )}' died in status ${appOrParcel.status}: `;\n\n  let result;\n\n  if (ogErr instanceof Error) {\n    try {\n      ogErr.message = errPrefix + ogErr.message;\n    } catch (err) {\n      /* Some errors have read-only message properties, in which case there is nothing\n       * that we can do.\n       */\n    }\n    result = ogErr;\n  } else {\n    console.warn(\n      formatErrorMessage(\n        30,\n        __DEV__ &&\n          `While ${appOrParcel.status}, '${toName(\n            appOrParcel\n          )}' rejected its lifecycle function promise with a non-Error. This will cause stack traces to not be accurate.`,\n        appOrParcel.status,\n        toName(appOrParcel)\n      )\n    );\n    try {\n      result = Error(errPrefix + JSON.stringify(ogErr));\n    } catch (err) {\n      // If it's not an Error and you can't stringify it, then what else can you even do to it?\n      result = ogErr;\n    }\n  }\n\n  result.appOrParcelName = toName(appOrParcel);\n\n  // We set the status after transforming the error so that the error message\n  // references the state the application was in before the status change.\n  appOrParcel.status = newStatus;\n\n  return result;\n}\n","import { handleAppError } from \"./app-errors.js\";\n\n// App statuses\nexport const NOT_LOADED = \"NOT_LOADED\";\nexport const LOADING_SOURCE_CODE = \"LOADING_SOURCE_CODE\";\nexport const NOT_BOOTSTRAPPED = \"NOT_BOOTSTRAPPED\";\nexport const BOOTSTRAPPING = \"BOOTSTRAPPING\";\nexport const NOT_MOUNTED = \"NOT_MOUNTED\";\nexport const MOUNTING = \"MOUNTING\";\nexport const MOUNTED = \"MOUNTED\";\nexport const UPDATING = \"UPDATING\";\nexport const UNMOUNTING = \"UNMOUNTING\";\nexport const UNLOADING = \"UNLOADING\";\nexport const LOAD_ERROR = \"LOAD_ERROR\";\nexport const SKIP_BECAUSE_BROKEN = \"SKIP_BECAUSE_BROKEN\";\n\nexport function isActive(app) {\n  return app.status === MOUNTED;\n}\n\nexport function shouldBeActive(app) {\n  try {\n    return app.activeWhen(window.location);\n  } catch (err) {\n    handleAppError(err, app, SKIP_BECAUSE_BROKEN);\n    return false;\n  }\n}\n\nexport function toName(app) {\n  return app.name;\n}\n\nexport function isParcel(appOrParcel) {\n  return Boolean(appOrParcel.unmountThisParcel);\n}\n\nexport function objectType(appOrParcel) {\n  return isParcel(appOrParcel) ? \"parcel\" : \"application\";\n}\n","// Object.assign() is not available in IE11. And the babel compiled output for object spread\n// syntax checks a bunch of Symbol stuff and is almost a kb. So this function is the smaller replacement.\nexport function assign() {\n  for (let i = arguments.length - 1; i > 0; i--) {\n    for (let key in arguments[i]) {\n      if (key === \"__proto__\") {\n        continue;\n      }\n      arguments[i - 1][key] = arguments[i][key];\n    }\n  }\n\n  return arguments[0];\n}\n","/* the array.prototype.find polyfill on npmjs.com is ~20kb (not worth it)\n * and lodash is ~200kb (not worth it)\n */\n\nexport function find(arr, func) {\n  for (let i = 0; i < arr.length; i++) {\n    if (func(arr[i])) {\n      return arr[i];\n    }\n  }\n\n  return null;\n}\n","import { find } from \"../utils/find.js\";\nimport { objectType, toName } from \"../applications/app.helpers.js\";\nimport { formatErrorMessage } from \"../applications/app-errors.js\";\n\nexport function validLifecycleFn(fn) {\n  return fn && (typeof fn === \"function\" || isArrayOfFns(fn));\n\n  function isArrayOfFns(arr) {\n    return (\n      Array.isArray(arr) && !find(arr, (item) => typeof item !== \"function\")\n    );\n  }\n}\n\nexport function flattenFnArray(appOrParcel, lifecycle) {\n  let fns = appOrParcel[lifecycle] || [];\n  fns = Array.isArray(fns) ? fns : [fns];\n  if (fns.length === 0) {\n    fns = [() => Promise.resolve()];\n  }\n\n  const type = objectType(appOrParcel);\n  const name = toName(appOrParcel);\n\n  return function (props) {\n    return fns.reduce((resultPromise, fn, index) => {\n      return resultPromise.then(() => {\n        const thisPromise = fn(props);\n        return smellsLikeAPromise(thisPromise)\n          ? thisPromise\n          : Promise.reject(\n              formatErrorMessage(\n                15,\n                __DEV__ &&\n                  `Within ${type} ${name}, the lifecycle function ${lifecycle} at array index ${index} did not return a promise`,\n                type,\n                name,\n                lifecycle,\n                index\n              )\n            );\n      });\n    }, Promise.resolve());\n  };\n}\n\nexport function smellsLikeAPromise(promise) {\n  return (\n    promise &&\n    typeof promise.then === \"function\" &&\n    typeof promise.catch === \"function\"\n  );\n}\n","import {\n  NOT_BOOTSTRAPPED,\n  BOOTSTRAPPING,\n  NOT_MOUNTED,\n  SKIP_BECAUSE_BROKEN,\n} from \"../applications/app.helpers.js\";\nimport { reasonableTime } from \"../applications/timeouts.js\";\nimport { handleAppError, transformErr } from \"../applications/app-errors.js\";\n\nexport function toBootstrapPromise(appOrParcel, hardFail) {\n  return Promise.resolve().then(() => {\n    if (appOrParcel.status !== NOT_BOOTSTRAPPED) {\n      return appOrParcel;\n    }\n\n    appOrParcel.status = BOOTSTRAPPING;\n\n    return reasonableTime(appOrParcel, \"bootstrap\")\n      .then(() => {\n        appOrParcel.status = NOT_MOUNTED;\n        return appOrParcel;\n      })\n      .catch((err) => {\n        if (hardFail) {\n          throw transformErr(err, appOrParcel, SKIP_BECAUSE_BROKEN);\n        } else {\n          handleAppError(err, appOrParcel, SKIP_BECAUSE_BROKEN);\n          return appOrParcel;\n        }\n      });\n  });\n}\n","import {\n  UNMOUNTING,\n  NOT_MOUNTED,\n  MOUNTED,\n  SKIP_BECAUSE_BROKEN,\n} from \"../applications/app.helpers.js\";\nimport { handleAppError, transformErr } from \"../applications/app-errors.js\";\nimport { reasonableTime } from \"../applications/timeouts.js\";\n\nexport function toUnmountPromise(appOrParcel, hardFail) {\n  return Promise.resolve().then(() => {\n    if (appOrParcel.status !== MOUNTED) {\n      return appOrParcel;\n    }\n    appOrParcel.status = UNMOUNTING;\n\n    const unmountChildrenParcels = Object.keys(\n      appOrParcel.parcels\n    ).map((parcelId) => appOrParcel.parcels[parcelId].unmountThisParcel());\n\n    let parcelError;\n\n    return Promise.all(unmountChildrenParcels)\n      .then(unmountAppOrParcel, (parcelError) => {\n        // There is a parcel unmount error\n        return unmountAppOrParcel().then(() => {\n          // Unmounting the app/parcel succeeded, but unmounting its children parcels did not\n          const parentError = Error(parcelError.message);\n          if (hardFail) {\n            throw transformErr(parentError, appOrParcel, SKIP_BECAUSE_BROKEN);\n          } else {\n            handleAppError(parentError, appOrParcel, SKIP_BECAUSE_BROKEN);\n          }\n        });\n      })\n      .then(() => appOrParcel);\n\n    function unmountAppOrParcel() {\n      // We always try to unmount the appOrParcel, even if the children parcels failed to unmount.\n      return reasonableTime(appOrParcel, \"unmount\")\n        .then(() => {\n          // The appOrParcel needs to stay in a broken status if its children parcels fail to unmount\n          if (!parcelError) {\n            appOrParcel.status = NOT_MOUNTED;\n          }\n        })\n        .catch((err) => {\n          if (hardFail) {\n            throw transformErr(err, appOrParcel, SKIP_BECAUSE_BROKEN);\n          } else {\n            handleAppError(err, appOrParcel, SKIP_BECAUSE_BROKEN);\n          }\n        });\n    }\n  });\n}\n","import {\n  NOT_MOUNTED,\n  MOUNTED,\n  SKIP_BECAUSE_BROKEN,\n} from \"../applications/app.helpers.js\";\nimport { handleAppError, transformErr } from \"../applications/app-errors.js\";\nimport { reasonableTime } from \"../applications/timeouts.js\";\nimport CustomEvent from \"custom-event\";\nimport { toUnmountPromise } from \"./unmount.js\";\n\nlet beforeFirstMountFired = false;\nlet firstMountFired = false;\n\nexport function toMountPromise(appOrParcel, hardFail) {\n  return Promise.resolve().then(() => {\n    if (appOrParcel.status !== NOT_MOUNTED) {\n      return appOrParcel;\n    }\n\n    if (!beforeFirstMountFired) {\n      window.dispatchEvent(new CustomEvent(\"single-spa:before-first-mount\"));\n      beforeFirstMountFired = true;\n    }\n\n    return reasonableTime(appOrParcel, \"mount\")\n      .then(() => {\n        appOrParcel.status = MOUNTED;\n\n        if (!firstMountFired) {\n          window.dispatchEvent(new CustomEvent(\"single-spa:first-mount\"));\n          firstMountFired = true;\n        }\n\n        return appOrParcel;\n      })\n      .catch((err) => {\n        // If we fail to mount the appOrParcel, we should attempt to unmount it before putting in SKIP_BECAUSE_BROKEN\n        // We temporarily put the appOrParcel into MOUNTED status so that toUnmountPromise actually attempts to unmount it\n        // instead of just doing a no-op.\n        appOrParcel.status = MOUNTED;\n        return toUnmountPromise(appOrParcel, true).then(\n          setSkipBecauseBroken,\n          setSkipBecauseBroken\n        );\n\n        function setSkipBecauseBroken() {\n          if (!hardFail) {\n            handleAppError(err, appOrParcel, SKIP_BECAUSE_BROKEN);\n            return appOrParcel;\n          } else {\n            throw transformErr(err, appOrParcel, SKIP_BECAUSE_BROKEN);\n          }\n        }\n      });\n  });\n}\n","import {\n  validLifecycleFn,\n  flattenFnArray,\n} from \"../lifecycles/lifecycle.helpers.js\";\nimport {\n  NOT_BOOTSTRAPPED,\n  NOT_MOUNTED,\n  MOUNTED,\n  LOADING_SOURCE_CODE,\n  SKIP_BECAUSE_BROKEN,\n  toName,\n} from \"../applications/app.helpers.js\";\nimport { toBootstrapPromise } from \"../lifecycles/bootstrap.js\";\nimport { toMountPromise } from \"../lifecycles/mount.js\";\nimport { toUpdatePromise } from \"../lifecycles/update.js\";\nimport { toUnmountPromise } from \"../lifecycles/unmount.js\";\nimport { ensureValidAppTimeouts } from \"../applications/timeouts.js\";\nimport { formatErrorMessage } from \"../applications/app-errors.js\";\n\nlet parcelCount = 0;\nconst rootParcels = { parcels: {} };\n\n// This is a public api, exported to users of single-spa\nexport function mountRootParcel() {\n  return mountParcel.apply(rootParcels, arguments);\n}\n\nexport function mountParcel(config, customProps) {\n  const owningAppOrParcel = this;\n\n  // Validate inputs\n  if (!config || (typeof config !== \"object\" && typeof config !== \"function\")) {\n    throw Error(\n      formatErrorMessage(\n        2,\n        __DEV__ &&\n          \"Cannot mount parcel without a config object or config loading function\"\n      )\n    );\n  }\n\n  if (config.name && typeof config.name !== \"string\") {\n    throw Error(\n      formatErrorMessage(\n        3,\n        __DEV__ &&\n          `Parcel name must be a string, if provided. Was given ${typeof config.name}`,\n        typeof config.name\n      )\n    );\n  }\n\n  if (typeof customProps !== \"object\") {\n    throw Error(\n      formatErrorMessage(\n        4,\n        __DEV__ &&\n          `Parcel ${name} has invalid customProps -- must be an object but was given ${typeof customProps}`,\n        name,\n        typeof customProps\n      )\n    );\n  }\n\n  if (!customProps.domElement) {\n    throw Error(\n      formatErrorMessage(\n        5,\n        __DEV__ &&\n          `Parcel ${name} cannot be mounted without a domElement provided as a prop`,\n        name\n      )\n    );\n  }\n\n  const id = parcelCount++;\n\n  const passedConfigLoadingFunction = typeof config === \"function\";\n  const configLoadingFunction = passedConfigLoadingFunction\n    ? config\n    : () => Promise.resolve(config);\n\n  // Internal representation\n  const parcel = {\n    id,\n    parcels: {},\n    status: passedConfigLoadingFunction\n      ? LOADING_SOURCE_CODE\n      : NOT_BOOTSTRAPPED,\n    customProps,\n    parentName: toName(owningAppOrParcel),\n    unmountThisParcel() {\n      if (parcel.status !== MOUNTED) {\n        throw Error(\n          formatErrorMessage(\n            6,\n            __DEV__ &&\n              `Cannot unmount parcel '${name}' -- it is in a ${parcel.status} status`,\n            name,\n            parcel.status\n          )\n        );\n      }\n\n      return toUnmountPromise(parcel, true)\n        .then((value) => {\n          if (parcel.parentName) {\n            delete owningAppOrParcel.parcels[parcel.id];\n          }\n\n          return value;\n        })\n        .then((value) => {\n          resolveUnmount(value);\n          return value;\n        })\n        .catch((err) => {\n          parcel.status = SKIP_BECAUSE_BROKEN;\n          rejectUnmount(err);\n          throw err;\n        });\n    },\n  };\n\n  // We return an external representation\n  let externalRepresentation;\n\n  // Add to owning app or parcel\n  owningAppOrParcel.parcels[id] = parcel;\n\n  let loadPromise = configLoadingFunction();\n\n  if (!loadPromise || typeof loadPromise.then !== \"function\") {\n    throw Error(\n      formatErrorMessage(\n        7,\n        __DEV__ &&\n          `When mounting a parcel, the config loading function must return a promise that resolves with the parcel config`\n      )\n    );\n  }\n\n  loadPromise = loadPromise.then((config) => {\n    if (!config) {\n      throw Error(\n        formatErrorMessage(\n          8,\n          __DEV__ &&\n            `When mounting a parcel, the config loading function returned a promise that did not resolve with a parcel config`\n        )\n      );\n    }\n\n    const name = config.name || `parcel-${id}`;\n\n    if (!validLifecycleFn(config.bootstrap)) {\n      throw Error(\n        formatErrorMessage(\n          9,\n          __DEV__ && `Parcel ${name} must have a valid bootstrap function`,\n          name\n        )\n      );\n    }\n\n    if (!validLifecycleFn(config.mount)) {\n      throw Error(\n        formatErrorMessage(\n          10,\n          __DEV__ && `Parcel ${name} must have a valid mount function`,\n          name\n        )\n      );\n    }\n\n    if (!validLifecycleFn(config.unmount)) {\n      throw Error(\n        formatErrorMessage(\n          11,\n          __DEV__ && `Parcel ${name} must have a valid unmount function`,\n          name\n        )\n      );\n    }\n\n    if (config.update && !validLifecycleFn(config.update)) {\n      throw Error(\n        formatErrorMessage(\n          12,\n          __DEV__ && `Parcel ${name} provided an invalid update function`,\n          name\n        )\n      );\n    }\n\n    const bootstrap = flattenFnArray(config, \"bootstrap\");\n    const mount = flattenFnArray(config, \"mount\");\n    const unmount = flattenFnArray(config, \"unmount\");\n\n    parcel.status = NOT_BOOTSTRAPPED;\n    parcel.name = name;\n    parcel.bootstrap = bootstrap;\n    parcel.mount = mount;\n    parcel.unmount = unmount;\n    parcel.timeouts = ensureValidAppTimeouts(config.timeouts);\n\n    if (config.update) {\n      parcel.update = flattenFnArray(config, \"update\");\n      externalRepresentation.update = function (customProps) {\n        parcel.customProps = customProps;\n\n        return promiseWithoutReturnValue(toUpdatePromise(parcel));\n      };\n    }\n  });\n\n  // Start bootstrapping and mounting\n  // The .then() causes the work to be put on the event loop instead of happening immediately\n  const bootstrapPromise = loadPromise.then(() =>\n    toBootstrapPromise(parcel, true)\n  );\n  const mountPromise = bootstrapPromise.then(() =>\n    toMountPromise(parcel, true)\n  );\n\n  let resolveUnmount, rejectUnmount;\n\n  const unmountPromise = new Promise((resolve, reject) => {\n    resolveUnmount = resolve;\n    rejectUnmount = reject;\n  });\n\n  externalRepresentation = {\n    mount() {\n      return promiseWithoutReturnValue(\n        Promise.resolve().then(() => {\n          if (parcel.status !== NOT_MOUNTED) {\n            throw Error(\n              formatErrorMessage(\n                13,\n                __DEV__ &&\n                  `Cannot mount parcel '${name}' -- it is in a ${parcel.status} status`,\n                name,\n                parcel.status\n              )\n            );\n          }\n\n          // Add to owning app or parcel\n          owningAppOrParcel.parcels[id] = parcel;\n\n          return toMountPromise(parcel);\n        })\n      );\n    },\n    unmount() {\n      return promiseWithoutReturnValue(parcel.unmountThisParcel());\n    },\n    getStatus() {\n      return parcel.status;\n    },\n    loadPromise: promiseWithoutReturnValue(loadPromise),\n    bootstrapPromise: promiseWithoutReturnValue(bootstrapPromise),\n    mountPromise: promiseWithoutReturnValue(mountPromise),\n    unmountPromise: promiseWithoutReturnValue(unmountPromise),\n  };\n\n  return externalRepresentation;\n}\n\nfunction promiseWithoutReturnValue(promise) {\n  return promise.then(() => null);\n}\n","import {\n  UPDATING,\n  MOUNTED,\n  SKIP_BECAUSE_BROKEN,\n  toName,\n} from \"../applications/app.helpers.js\";\nimport {\n  transformErr,\n  formatErrorMessage,\n} from \"../applications/app-errors.js\";\nimport { reasonableTime } from \"../applications/timeouts.js\";\n\nexport function toUpdatePromise(parcel) {\n  return Promise.resolve().then(() => {\n    if (parcel.status !== MOUNTED) {\n      throw Error(\n        formatErrorMessage(\n          32,\n          __DEV__ &&\n            `Cannot update parcel '${toName(\n              parcel\n            )}' because it is not mounted`,\n          toName(parcel)\n        )\n      );\n    }\n\n    parcel.status = UPDATING;\n\n    return reasonableTime(parcel, \"update\")\n      .then(() => {\n        parcel.status = MOUNTED;\n        return parcel;\n      })\n      .catch((err) => {\n        throw transformErr(err, parcel, SKIP_BECAUSE_BROKEN);\n      });\n  });\n}\n","import * as singleSpa from \"../single-spa.js\";\nimport { mountParcel } from \"../parcels/mount-parcel.js\";\nimport { assign } from \"../utils/assign.js\";\nimport { isParcel, toName } from \"../applications/app.helpers.js\";\nimport { formatErrorMessage } from \"../applications/app-errors.js\";\n\nexport function getProps(appOrParcel) {\n  const name = toName(appOrParcel);\n  let customProps =\n    typeof appOrParcel.customProps === \"function\"\n      ? appOrParcel.customProps(name, window.location)\n      : appOrParcel.customProps;\n  if (\n    typeof customProps !== \"object\" ||\n    customProps === null ||\n    Array.isArray(customProps)\n  ) {\n    customProps = {};\n    console.warn(\n      formatErrorMessage(\n        40,\n        __DEV__ &&\n          `single-spa: ${name}'s customProps function must return an object. Received ${customProps}`\n      ),\n      name,\n      customProps\n    );\n  }\n  const result = assign({}, customProps, {\n    name,\n    mountParcel: mountParcel.bind(appOrParcel),\n    singleSpa,\n  });\n\n  if (isParcel(appOrParcel)) {\n    result.unmountSelf = appOrParcel.unmountThisParcel;\n  }\n\n  return result;\n}\n","import { assign } from \"../utils/assign\";\nimport { getProps } from \"../lifecycles/prop.helpers\";\nimport { objectType, toName } from \"./app.helpers\";\nimport { formatErrorMessage } from \"./app-errors\";\n\nconst defaultWarningMillis = 1000;\n\nconst globalTimeoutConfig = {\n  bootstrap: {\n    millis: 4000,\n    dieOnTimeout: false,\n    warningMillis: defaultWarningMillis,\n  },\n  mount: {\n    millis: 3000,\n    dieOnTimeout: false,\n    warningMillis: defaultWarningMillis,\n  },\n  unmount: {\n    millis: 3000,\n    dieOnTimeout: false,\n    warningMillis: defaultWarningMillis,\n  },\n  unload: {\n    millis: 3000,\n    dieOnTimeout: false,\n    warningMillis: defaultWarningMillis,\n  },\n  update: {\n    millis: 3000,\n    dieOnTimeout: false,\n    warningMillis: defaultWarningMillis,\n  },\n};\n\nexport function setBootstrapMaxTime(time, dieOnTimeout, warningMillis) {\n  if (typeof time !== \"number\" || time <= 0) {\n    throw Error(\n      formatErrorMessage(\n        16,\n        __DEV__ &&\n          `bootstrap max time must be a positive integer number of milliseconds`\n      )\n    );\n  }\n\n  globalTimeoutConfig.bootstrap = {\n    millis: time,\n    dieOnTimeout,\n    warningMillis: warningMillis || defaultWarningMillis,\n  };\n}\n\nexport function setMountMaxTime(time, dieOnTimeout, warningMillis) {\n  if (typeof time !== \"number\" || time <= 0) {\n    throw Error(\n      formatErrorMessage(\n        17,\n        __DEV__ &&\n          `mount max time must be a positive integer number of milliseconds`\n      )\n    );\n  }\n\n  globalTimeoutConfig.mount = {\n    millis: time,\n    dieOnTimeout,\n    warningMillis: warningMillis || defaultWarningMillis,\n  };\n}\n\nexport function setUnmountMaxTime(time, dieOnTimeout, warningMillis) {\n  if (typeof time !== \"number\" || time <= 0) {\n    throw Error(\n      formatErrorMessage(\n        18,\n        __DEV__ &&\n          `unmount max time must be a positive integer number of milliseconds`\n      )\n    );\n  }\n\n  globalTimeoutConfig.unmount = {\n    millis: time,\n    dieOnTimeout,\n    warningMillis: warningMillis || defaultWarningMillis,\n  };\n}\n\nexport function setUnloadMaxTime(time, dieOnTimeout, warningMillis) {\n  if (typeof time !== \"number\" || time <= 0) {\n    throw Error(\n      formatErrorMessage(\n        19,\n        __DEV__ &&\n          `unload max time must be a positive integer number of milliseconds`\n      )\n    );\n  }\n\n  globalTimeoutConfig.unload = {\n    millis: time,\n    dieOnTimeout,\n    warningMillis: warningMillis || defaultWarningMillis,\n  };\n}\n\nexport function reasonableTime(appOrParcel, lifecycle) {\n  const timeoutConfig = appOrParcel.timeouts[lifecycle];\n  const warningPeriod = timeoutConfig.warningMillis;\n  const type = objectType(appOrParcel);\n\n  return new Promise((resolve, reject) => {\n    let finished = false;\n    let errored = false;\n\n    appOrParcel[lifecycle](getProps(appOrParcel))\n      .then((val) => {\n        finished = true;\n        resolve(val);\n      })\n      .catch((val) => {\n        finished = true;\n        reject(val);\n      });\n\n    setTimeout(() => maybeTimingOut(1), warningPeriod);\n    setTimeout(() => maybeTimingOut(true), timeoutConfig.millis);\n\n    const errMsg = formatErrorMessage(\n      31,\n      __DEV__ &&\n        `Lifecycle function ${lifecycle} for ${type} ${toName(\n          appOrParcel\n        )} lifecycle did not resolve or reject for ${timeoutConfig.millis} ms.`,\n      lifecycle,\n      type,\n      toName(appOrParcel),\n      timeoutConfig.millis\n    );\n\n    function maybeTimingOut(shouldError) {\n      if (!finished) {\n        if (shouldError === true) {\n          errored = true;\n          if (timeoutConfig.dieOnTimeout) {\n            reject(Error(errMsg));\n          } else {\n            console.error(errMsg);\n            //don't resolve or reject, we're waiting this one out\n          }\n        } else if (!errored) {\n          const numWarnings = shouldError;\n          const numMillis = numWarnings * warningPeriod;\n          console.warn(errMsg);\n          if (numMillis + warningPeriod < timeoutConfig.millis) {\n            setTimeout(() => maybeTimingOut(numWarnings + 1), warningPeriod);\n          }\n        }\n      }\n    }\n  });\n}\n\nexport function ensureValidAppTimeouts(timeouts) {\n  const result = {};\n\n  for (let key in globalTimeoutConfig) {\n    result[key] = assign(\n      {},\n      globalTimeoutConfig[key],\n      (timeouts && timeouts[key]) || {}\n    );\n  }\n\n  return result;\n}\n","import {\n  LOAD_ERROR,\n  NOT_BOOTSTRAPPED,\n  LOADING_SOURCE_CODE,\n  SKIP_BECAUSE_BROKEN,\n  NOT_LOADED,\n  objectType,\n  toName,\n} from \"../applications/app.helpers.js\";\nimport { ensureValidAppTimeouts } from \"../applications/timeouts.js\";\nimport {\n  handleAppError,\n  formatErrorMessage,\n} from \"../applications/app-errors.js\";\nimport {\n  flattenFnArray,\n  smellsLikeAPromise,\n  validLifecycleFn,\n} from \"./lifecycle.helpers.js\";\nimport { getProps } from \"./prop.helpers.js\";\nimport { assign } from \"../utils/assign.js\";\n\nexport function toLoadPromise(app) {\n  return Promise.resolve().then(() => {\n    if (app.loadPromise) {\n      return app.loadPromise;\n    }\n\n    if (app.status !== NOT_LOADED && app.status !== LOAD_ERROR) {\n      return app;\n    }\n\n    app.status = LOADING_SOURCE_CODE;\n\n    let appOpts, isUserErr;\n\n    return (app.loadPromise = Promise.resolve()\n      .then(() => {\n        const loadPromise = app.loadApp(getProps(app));\n        if (!smellsLikeAPromise(loadPromise)) {\n          // The name of the app will be prepended to this error message inside of the handleAppError function\n          isUserErr = true;\n          throw Error(\n            formatErrorMessage(\n              33,\n              __DEV__ &&\n                `single-spa loading function did not return a promise. Check the second argument to registerApplication('${toName(\n                  app\n                )}', loadingFunction, activityFunction)`,\n              toName(app)\n            )\n          );\n        }\n        return loadPromise.then((val) => {\n          app.loadErrorTime = null;\n\n          appOpts = val;\n\n          let validationErrMessage, validationErrCode;\n\n          if (typeof appOpts !== \"object\") {\n            validationErrCode = 34;\n            if (__DEV__) {\n              validationErrMessage = `does not export anything`;\n            }\n          }\n\n          if (!validLifecycleFn(appOpts.bootstrap)) {\n            validationErrCode = 35;\n            if (__DEV__) {\n              validationErrMessage = `does not export a bootstrap function or array of functions`;\n            }\n          }\n\n          if (!validLifecycleFn(appOpts.mount)) {\n            validationErrCode = 36;\n            if (__DEV__) {\n              validationErrMessage = `does not export a bootstrap function or array of functions`;\n            }\n          }\n\n          if (!validLifecycleFn(appOpts.unmount)) {\n            validationErrCode = 37;\n            if (__DEV__) {\n              validationErrMessage = `does not export a bootstrap function or array of functions`;\n            }\n          }\n\n          const type = objectType(appOpts);\n\n          if (validationErrCode) {\n            let appOptsStr;\n            try {\n              appOptsStr = JSON.stringify(appOpts);\n            } catch {}\n            console.error(\n              formatErrorMessage(\n                validationErrCode,\n                __DEV__ &&\n                  `The loading function for single-spa ${type} '${toName(\n                    app\n                  )}' resolved with the following, which does not have bootstrap, mount, and unmount functions`,\n                type,\n                toName(app),\n                appOptsStr\n              ),\n              appOpts\n            );\n            handleAppError(validationErrMessage, app, SKIP_BECAUSE_BROKEN);\n            return app;\n          }\n\n          if (appOpts.devtools && appOpts.devtools.overlays) {\n            app.devtools.overlays = assign(\n              {},\n              app.devtools.overlays,\n              appOpts.devtools.overlays\n            );\n          }\n\n          app.status = NOT_BOOTSTRAPPED;\n          app.bootstrap = flattenFnArray(appOpts, \"bootstrap\");\n          app.mount = flattenFnArray(appOpts, \"mount\");\n          app.unmount = flattenFnArray(appOpts, \"unmount\");\n          app.unload = flattenFnArray(appOpts, \"unload\");\n          app.timeouts = ensureValidAppTimeouts(appOpts.timeouts);\n\n          delete app.loadPromise;\n\n          return app;\n        });\n      })\n      .catch((err) => {\n        delete app.loadPromise;\n\n        let newStatus;\n        if (isUserErr) {\n          newStatus = SKIP_BECAUSE_BROKEN;\n        } else {\n          newStatus = LOAD_ERROR;\n          app.loadErrorTime = new Date().getTime();\n        }\n        handleAppError(err, app, newStatus);\n\n        return app;\n      }));\n  });\n}\n","export const isInBrowser = typeof window !== \"undefined\";\n","import { reroute } from \"./reroute.js\";\nimport { find } from \"../utils/find.js\";\nimport { formatErrorMessage } from \"../applications/app-errors.js\";\nimport { isInBrowser } from \"../utils/runtime-environment.js\";\n\n/* We capture navigation event listeners so that we can make sure\n * that application navigation listeners are not called until\n * single-spa has ensured that the correct applications are\n * unmounted and mounted.\n */\nconst capturedEventListeners = {\n  hashchange: [],\n  popstate: [],\n};\n\nexport const routingEventsListeningTo = [\"hashchange\", \"popstate\"];\n\nexport function navigateToUrl(obj) {\n  let url;\n  if (typeof obj === \"string\") {\n    url = obj;\n  } else if (this && this.href) {\n    url = this.href;\n  } else if (\n    obj &&\n    obj.currentTarget &&\n    obj.currentTarget.href &&\n    obj.preventDefault\n  ) {\n    url = obj.currentTarget.href;\n    obj.preventDefault();\n  } else {\n    throw Error(\n      formatErrorMessage(\n        14,\n        __DEV__ &&\n          `singleSpaNavigate/navigateToUrl must be either called with a string url, with an <a> tag as its context, or with an event whose currentTarget is an <a> tag`\n      )\n    );\n  }\n\n  const current = parseUri(window.location.href);\n  const destination = parseUri(url);\n\n  if (url.indexOf(\"#\") === 0) {\n    window.location.hash = destination.hash;\n  } else if (current.host !== destination.host && destination.host) {\n    if (process.env.BABEL_ENV === \"test\") {\n      return { wouldHaveReloadedThePage: true };\n    } else {\n      window.location.href = url;\n    }\n  } else if (\n    destination.pathname === current.pathname &&\n    destination.search === current.search\n  ) {\n    window.location.hash = destination.hash;\n  } else {\n    // different path, host, or query params\n    window.history.pushState(null, null, url);\n  }\n}\n\nexport function callCapturedEventListeners(eventArguments) {\n  if (eventArguments) {\n    const eventType = eventArguments[0].type;\n    if (routingEventsListeningTo.indexOf(eventType) >= 0) {\n      capturedEventListeners[eventType].forEach((listener) => {\n        try {\n          // The error thrown by application event listener should not break single-spa down.\n          // Just like https://github.com/single-spa/single-spa/blob/85f5042dff960e40936f3a5069d56fc9477fac04/src/navigation/reroute.js#L140-L146 did\n          listener.apply(this, eventArguments);\n        } catch (e) {\n          setTimeout(() => {\n            throw e;\n          });\n        }\n      });\n    }\n  }\n}\n\nlet urlRerouteOnly;\n\nexport function setUrlRerouteOnly(val) {\n  urlRerouteOnly = val;\n}\n\nfunction urlReroute() {\n  reroute([], arguments);\n}\n\nfunction patchedUpdateState(updateState, methodName) {\n  return function () {\n    const urlBefore = window.location.href;\n    const result = updateState.apply(this, arguments);\n    const urlAfter = window.location.href;\n\n    if (!urlRerouteOnly || urlBefore !== urlAfter) {\n      urlReroute(createPopStateEvent(window.history.state, methodName));\n    }\n\n    return result;\n  };\n}\n\nfunction createPopStateEvent(state, originalMethodName) {\n  // https://github.com/single-spa/single-spa/issues/224 and https://github.com/single-spa/single-spa-angular/issues/49\n  // We need a popstate event even though the browser doesn't do one by default when you call replaceState, so that\n  // all the applications can reroute. We explicitly identify this extraneous event by setting singleSpa=true and\n  // singleSpaTrigger=<pushState|replaceState> on the event instance.\n  let evt;\n  try {\n    evt = new PopStateEvent(\"popstate\", { state });\n  } catch (err) {\n    // IE 11 compatibility https://github.com/single-spa/single-spa/issues/299\n    // https://docs.microsoft.com/en-us/openspecs/ie_standards/ms-html5e/bd560f47-b349-4d2c-baa8-f1560fb489dd\n    evt = document.createEvent(\"PopStateEvent\");\n    evt.initPopStateEvent(\"popstate\", false, false, state);\n  }\n  evt.singleSpa = true;\n  evt.singleSpaTrigger = originalMethodName;\n  return evt;\n}\n\nif (isInBrowser) {\n  // We will trigger an app change for any routing events.\n  window.addEventListener(\"hashchange\", urlReroute);\n  window.addEventListener(\"popstate\", urlReroute);\n\n  // Monkeypatch addEventListener so that we can ensure correct timing\n  const originalAddEventListener = window.addEventListener;\n  const originalRemoveEventListener = window.removeEventListener;\n  window.addEventListener = function (eventName, fn) {\n    if (typeof fn === \"function\") {\n      if (\n        routingEventsListeningTo.indexOf(eventName) >= 0 &&\n        !find(capturedEventListeners[eventName], (listener) => listener === fn)\n      ) {\n        capturedEventListeners[eventName].push(fn);\n        return;\n      }\n    }\n\n    return originalAddEventListener.apply(this, arguments);\n  };\n\n  window.removeEventListener = function (eventName, listenerFn) {\n    if (typeof listenerFn === \"function\") {\n      if (routingEventsListeningTo.indexOf(eventName) >= 0) {\n        capturedEventListeners[eventName] = capturedEventListeners[\n          eventName\n        ].filter((fn) => fn !== listenerFn);\n        return;\n      }\n    }\n\n    return originalRemoveEventListener.apply(this, arguments);\n  };\n\n  window.history.pushState = patchedUpdateState(\n    window.history.pushState,\n    \"pushState\"\n  );\n  window.history.replaceState = patchedUpdateState(\n    window.history.replaceState,\n    \"replaceState\"\n  );\n\n  if (window.singleSpaNavigate) {\n    console.warn(\n      formatErrorMessage(\n        41,\n        __DEV__ &&\n          \"single-spa has been loaded twice on the page. This can result in unexpected behavior.\"\n      )\n    );\n  } else {\n    /* For convenience in `onclick` attributes, we expose a global function for navigating to\n     * whatever an <a> tag's href is.\n     */\n    window.singleSpaNavigate = navigateToUrl;\n  }\n}\n\nfunction parseUri(str) {\n  const anchor = document.createElement(\"a\");\n  anchor.href = str;\n  return anchor;\n}\n","import { routingEventsListeningTo } from \"./navigation/navigation-events.js\";\n\nlet hasInitialized = false;\n\nexport function ensureJQuerySupport(jQuery = window.jQuery) {\n  if (!jQuery) {\n    if (window.$ && window.$.fn && window.$.fn.jquery) {\n      jQuery = window.$;\n    }\n  }\n\n  if (jQuery && !hasInitialized) {\n    const originalJQueryOn = jQuery.fn.on;\n    const originalJQueryOff = jQuery.fn.off;\n\n    jQuery.fn.on = function (eventString, fn) {\n      return captureRoutingEvents.call(\n        this,\n        originalJQueryOn,\n        window.addEventListener,\n        eventString,\n        fn,\n        arguments\n      );\n    };\n\n    jQuery.fn.off = function (eventString, fn) {\n      return captureRoutingEvents.call(\n        this,\n        originalJQueryOff,\n        window.removeEventListener,\n        eventString,\n        fn,\n        arguments\n      );\n    };\n\n    hasInitialized = true;\n  }\n}\n\nfunction captureRoutingEvents(\n  originalJQueryFunction,\n  nativeFunctionToCall,\n  eventString,\n  fn,\n  originalArgs\n) {\n  if (typeof eventString !== \"string\") {\n    return originalJQueryFunction.apply(this, originalArgs);\n  }\n\n  const eventNames = eventString.split(/\\s+/);\n  eventNames.forEach((eventName) => {\n    if (routingEventsListeningTo.indexOf(eventName) >= 0) {\n      nativeFunctionToCall(eventName, fn);\n      eventString = eventString.replace(eventName, \"\");\n    }\n  });\n\n  if (eventString.trim() === \"\") {\n    return this;\n  } else {\n    return originalJQueryFunction.apply(this, originalArgs);\n  }\n}\n","import {\n  NOT_MOUNTED,\n  UNLOADING,\n  NOT_LOADED,\n  SKIP_BECAUSE_BROKEN,\n  toName,\n} from \"../applications/app.helpers.js\";\nimport { handleAppError } from \"../applications/app-errors.js\";\nimport { reasonableTime } from \"../applications/timeouts.js\";\n\nconst appsToUnload = {};\n\nexport function toUnloadPromise(app) {\n  return Promise.resolve().then(() => {\n    const unloadInfo = appsToUnload[toName(app)];\n\n    if (!unloadInfo) {\n      /* No one has called unloadApplication for this app,\n       */\n      return app;\n    }\n\n    if (app.status === NOT_LOADED) {\n      /* This app is already unloaded. We just need to clean up\n       * anything that still thinks we need to unload the app.\n       */\n      finishUnloadingApp(app, unloadInfo);\n      return app;\n    }\n\n    if (app.status === UNLOADING) {\n      /* Both unloadApplication and reroute want to unload this app.\n       * It only needs to be done once, though.\n       */\n      return unloadInfo.promise.then(() => app);\n    }\n\n    if (app.status !== NOT_MOUNTED) {\n      /* The app cannot be unloaded until it is unmounted.\n       */\n      return app;\n    }\n\n    app.status = UNLOADING;\n    return reasonableTime(app, \"unload\")\n      .then(() => {\n        finishUnloadingApp(app, unloadInfo);\n        return app;\n      })\n      .catch((err) => {\n        errorUnloadingApp(app, unloadInfo, err);\n        return app;\n      });\n  });\n}\n\nfunction finishUnloadingApp(app, unloadInfo) {\n  delete appsToUnload[toName(app)];\n\n  // Unloaded apps don't have lifecycles\n  delete app.bootstrap;\n  delete app.mount;\n  delete app.unmount;\n  delete app.unload;\n\n  app.status = NOT_LOADED;\n\n  /* resolve the promise of whoever called unloadApplication.\n   * This should be done after all other cleanup/bookkeeping\n   */\n  unloadInfo.resolve();\n}\n\nfunction errorUnloadingApp(app, unloadInfo, err) {\n  delete appsToUnload[toName(app)];\n\n  // Unloaded apps don't have lifecycles\n  delete app.bootstrap;\n  delete app.mount;\n  delete app.unmount;\n  delete app.unload;\n\n  handleAppError(err, app, SKIP_BECAUSE_BROKEN);\n  unloadInfo.reject(err);\n}\n\nexport function addAppToUnload(app, promiseGetter, resolve, reject) {\n  appsToUnload[toName(app)] = { app, resolve, reject };\n  Object.defineProperty(appsToUnload[toName(app)], \"promise\", {\n    get: promiseGetter,\n  });\n}\n\nexport function getAppUnloadInfo(appName) {\n  return appsToUnload[appName];\n}\n","import { ensureJQuerySupport } from \"../jquery-support.js\";\nimport {\n  isActive,\n  toName,\n  NOT_LOADED,\n  NOT_BOOTSTRAPPED,\n  NOT_MOUNTED,\n  MOUNTED,\n  LOAD_ERROR,\n  SKIP_BECAUSE_BROKEN,\n  LOADING_SOURCE_CODE,\n  shouldBeActive,\n} from \"./app.helpers.js\";\nimport { reroute } from \"../navigation/reroute.js\";\nimport { find } from \"../utils/find.js\";\nimport { toUnmountPromise } from \"../lifecycles/unmount.js\";\nimport {\n  toUnloadPromise,\n  getAppUnloadInfo,\n  addAppToUnload,\n} from \"../lifecycles/unload.js\";\nimport { formatErrorMessage } from \"./app-errors.js\";\nimport { isInBrowser } from \"../utils/runtime-environment.js\";\nimport { assign } from \"../utils/assign\";\n\nconst apps = [];\n\nexport function getAppChanges() {\n  const appsToUnload = [],\n    appsToUnmount = [],\n    appsToLoad = [],\n    appsToMount = [];\n\n  // We re-attempt to download applications in LOAD_ERROR after a timeout of 200 milliseconds\n  const currentTime = new Date().getTime();\n\n  apps.forEach((app) => {\n    const appShouldBeActive =\n      app.status !== SKIP_BECAUSE_BROKEN && shouldBeActive(app);\n\n    switch (app.status) {\n      case LOAD_ERROR:\n        if (currentTime - app.loadErrorTime >= 200) {\n          appsToLoad.push(app);\n        }\n        break;\n      case NOT_LOADED:\n      case LOADING_SOURCE_CODE:\n        if (appShouldBeActive) {\n          appsToLoad.push(app);\n        }\n        break;\n      case NOT_BOOTSTRAPPED:\n      case NOT_MOUNTED:\n        if (!appShouldBeActive && getAppUnloadInfo(toName(app))) {\n          appsToUnload.push(app);\n        } else if (appShouldBeActive) {\n          appsToMount.push(app);\n        }\n        break;\n      case MOUNTED:\n        if (!appShouldBeActive) {\n          appsToUnmount.push(app);\n        }\n        break;\n      // all other statuses are ignored\n    }\n  });\n\n  return { appsToUnload, appsToUnmount, appsToLoad, appsToMount };\n}\n\nexport function getMountedApps() {\n  return apps.filter(isActive).map(toName);\n}\n\nexport function getAppNames() {\n  return apps.map(toName);\n}\n\n// used in devtools, not (currently) exposed as a single-spa API\nexport function getRawAppData() {\n  return [...apps];\n}\n\nexport function getAppStatus(appName) {\n  const app = find(apps, (app) => toName(app) === appName);\n  return app ? app.status : null;\n}\n\nexport function registerApplication(\n  appNameOrConfig,\n  appOrLoadApp,\n  activeWhen,\n  customProps\n) {\n  const registration = sanitizeArguments(\n    appNameOrConfig,\n    appOrLoadApp,\n    activeWhen,\n    customProps\n  );\n\n  if (getAppNames().indexOf(registration.name) !== -1)\n    throw Error(\n      formatErrorMessage(\n        21,\n        __DEV__ &&\n          `There is already an app registered with name ${registration.name}`,\n        registration.name\n      )\n    );\n\n  apps.push(\n    assign(\n      {\n        loadErrorTime: null,\n        status: NOT_LOADED,\n        parcels: {},\n        devtools: {\n          overlays: {\n            options: {},\n            selectors: [],\n          },\n        },\n      },\n      registration\n    )\n  );\n\n  if (isInBrowser) {\n    ensureJQuerySupport();\n    reroute();\n  }\n}\n\nexport function checkActivityFunctions(location = window.location) {\n  return apps.filter((app) => app.activeWhen(location)).map(toName);\n}\n\nexport function unregisterApplication(appName) {\n  if (apps.filter((app) => toName(app) === appName).length === 0) {\n    throw Error(\n      formatErrorMessage(\n        25,\n        __DEV__ &&\n          `Cannot unregister application '${appName}' because no such application has been registered`,\n        appName\n      )\n    );\n  }\n\n  return unloadApplication(appName).then(() => {\n    const appIndex = apps.map(toName).indexOf(appName);\n    apps.splice(appIndex, 1);\n  });\n}\n\nexport function unloadApplication(appName, opts = { waitForUnmount: false }) {\n  if (typeof appName !== \"string\") {\n    throw Error(\n      formatErrorMessage(\n        26,\n        __DEV__ && `unloadApplication requires a string 'appName'`\n      )\n    );\n  }\n  const app = find(apps, (App) => toName(App) === appName);\n  if (!app) {\n    throw Error(\n      formatErrorMessage(\n        27,\n        __DEV__ &&\n          `Could not unload application '${appName}' because no such application has been registered`,\n        appName\n      )\n    );\n  }\n\n  const appUnloadInfo = getAppUnloadInfo(toName(app));\n  if (opts && opts.waitForUnmount) {\n    // We need to wait for unmount before unloading the app\n\n    if (appUnloadInfo) {\n      // Someone else is already waiting for this, too\n      return appUnloadInfo.promise;\n    } else {\n      // We're the first ones wanting the app to be resolved.\n      const promise = new Promise((resolve, reject) => {\n        addAppToUnload(app, () => promise, resolve, reject);\n      });\n      return promise;\n    }\n  } else {\n    /* We should unmount the app, unload it, and remount it immediately.\n     */\n\n    let resultPromise;\n\n    if (appUnloadInfo) {\n      // Someone else is already waiting for this app to unload\n      resultPromise = appUnloadInfo.promise;\n      immediatelyUnloadApp(app, appUnloadInfo.resolve, appUnloadInfo.reject);\n    } else {\n      // We're the first ones wanting the app to be resolved.\n      resultPromise = new Promise((resolve, reject) => {\n        addAppToUnload(app, () => resultPromise, resolve, reject);\n        immediatelyUnloadApp(app, resolve, reject);\n      });\n    }\n\n    return resultPromise;\n  }\n}\n\nfunction immediatelyUnloadApp(app, resolve, reject) {\n  toUnmountPromise(app)\n    .then(toUnloadPromise)\n    .then(() => {\n      resolve();\n      setTimeout(() => {\n        // reroute, but the unload promise is done\n        reroute();\n      });\n    })\n    .catch(reject);\n}\n\nfunction validateRegisterWithArguments(\n  name,\n  appOrLoadApp,\n  activeWhen,\n  customProps\n) {\n  if (typeof name !== \"string\" || name.length === 0)\n    throw Error(\n      formatErrorMessage(\n        20,\n        __DEV__ &&\n          `The 1st argument to registerApplication must be a non-empty string 'appName'`\n      )\n    );\n\n  if (!appOrLoadApp)\n    throw Error(\n      formatErrorMessage(\n        23,\n        __DEV__ &&\n          \"The 2nd argument to registerApplication must be an application or loading application function\"\n      )\n    );\n\n  if (typeof activeWhen !== \"function\")\n    throw Error(\n      formatErrorMessage(\n        24,\n        __DEV__ &&\n          \"The 3rd argument to registerApplication must be an activeWhen function\"\n      )\n    );\n\n  if (!validCustomProps(customProps))\n    throw Error(\n      formatErrorMessage(\n        22,\n        __DEV__ &&\n          \"The optional 4th argument is a customProps and must be an object\"\n      )\n    );\n}\n\nexport function validateRegisterWithConfig(config) {\n  if (Array.isArray(config) || config === null)\n    throw Error(\n      formatErrorMessage(\n        39,\n        __DEV__ && \"Configuration object can't be an Array or null!\"\n      )\n    );\n  const validKeys = [\"name\", \"app\", \"activeWhen\", \"customProps\"];\n  const invalidKeys = Object.keys(config).reduce(\n    (invalidKeys, prop) =>\n      validKeys.indexOf(prop) >= 0 ? invalidKeys : invalidKeys.concat(prop),\n    []\n  );\n  if (invalidKeys.length !== 0)\n    throw Error(\n      formatErrorMessage(\n        38,\n        __DEV__ &&\n          `The configuration object accepts only: ${validKeys.join(\n            \", \"\n          )}. Invalid keys: ${invalidKeys.join(\", \")}.`,\n        validKeys.join(\", \"),\n        invalidKeys.join(\", \")\n      )\n    );\n  if (typeof config.name !== \"string\" || config.name.length === 0)\n    throw Error(\n      formatErrorMessage(\n        20,\n        __DEV__ &&\n          \"The config.name on registerApplication must be a non-empty string\"\n      )\n    );\n  if (typeof config.app !== \"object\" && typeof config.app !== \"function\")\n    throw Error(\n      formatErrorMessage(\n        20,\n        __DEV__ &&\n          \"The config.app on registerApplication must be an application or a loading function\"\n      )\n    );\n  const allowsStringAndFunction = (activeWhen) =>\n    typeof activeWhen === \"string\" || typeof activeWhen === \"function\";\n  if (\n    !allowsStringAndFunction(config.activeWhen) &&\n    !(\n      Array.isArray(config.activeWhen) &&\n      config.activeWhen.every(allowsStringAndFunction)\n    )\n  )\n    throw Error(\n      formatErrorMessage(\n        24,\n        __DEV__ &&\n          \"The config.activeWhen on registerApplication must be a string, function or an array with both\"\n      )\n    );\n  if (!validCustomProps(config.customProps))\n    throw Error(\n      formatErrorMessage(\n        22,\n        __DEV__ && \"The optional config.customProps must be an object\"\n      )\n    );\n}\n\nfunction validCustomProps(customProps) {\n  return (\n    !customProps ||\n    typeof customProps === \"function\" ||\n    (typeof customProps === \"object\" &&\n      customProps !== null &&\n      !Array.isArray(customProps))\n  );\n}\n\nfunction sanitizeArguments(\n  appNameOrConfig,\n  appOrLoadApp,\n  activeWhen,\n  customProps\n) {\n  const usingObjectAPI = typeof appNameOrConfig === \"object\";\n\n  const registration = {\n    name: null,\n    loadApp: null,\n    activeWhen: null,\n    customProps: null,\n  };\n\n  if (usingObjectAPI) {\n    validateRegisterWithConfig(appNameOrConfig);\n    registration.name = appNameOrConfig.name;\n    registration.loadApp = appNameOrConfig.app;\n    registration.activeWhen = appNameOrConfig.activeWhen;\n    registration.customProps = appNameOrConfig.customProps;\n  } else {\n    validateRegisterWithArguments(\n      appNameOrConfig,\n      appOrLoadApp,\n      activeWhen,\n      customProps\n    );\n    registration.name = appNameOrConfig;\n    registration.loadApp = appOrLoadApp;\n    registration.activeWhen = activeWhen;\n    registration.customProps = customProps;\n  }\n\n  registration.loadApp = sanitizeLoadApp(registration.loadApp);\n  registration.customProps = sanitizeCustomProps(registration.customProps);\n  registration.activeWhen = sanitizeActiveWhen(registration.activeWhen);\n\n  return registration;\n}\n\nfunction sanitizeLoadApp(loadApp) {\n  if (typeof loadApp !== \"function\") {\n    return () => Promise.resolve(loadApp);\n  }\n\n  return loadApp;\n}\n\nfunction sanitizeCustomProps(customProps) {\n  return customProps ? customProps : {};\n}\n\nfunction sanitizeActiveWhen(activeWhen) {\n  let activeWhenArray = Array.isArray(activeWhen) ? activeWhen : [activeWhen];\n  activeWhenArray = activeWhenArray.map((activeWhenOrPath) =>\n    typeof activeWhenOrPath === \"function\"\n      ? activeWhenOrPath\n      : pathToActiveWhen(activeWhenOrPath)\n  );\n\n  return (location) =>\n    activeWhenArray.some((activeWhen) => activeWhen(location));\n}\n\nexport function pathToActiveWhen(path) {\n  const regex = toDynamicPathValidatorRegex(path);\n\n  return (location) => {\n    const route = location.href\n      .replace(location.origin, \"\")\n      .replace(location.search, \"\")\n      .split(\"?\")[0];\n    return regex.test(route);\n  };\n}\n\nexport function toDynamicPathValidatorRegex(path) {\n  let lastIndex = 0,\n    inDynamic = false,\n    regexStr = \"^\";\n\n  if (path[0] !== \"/\") {\n    path = \"/\" + path;\n  }\n\n  for (let charIndex = 0; charIndex < path.length; charIndex++) {\n    const char = path[charIndex];\n    const startOfDynamic = !inDynamic && char === \":\";\n    const endOfDynamic = inDynamic && char === \"/\";\n    if (startOfDynamic || endOfDynamic) {\n      appendToRegex(charIndex);\n    }\n  }\n\n  appendToRegex(path.length);\n  return new RegExp(regexStr, \"i\");\n\n  function appendToRegex(index) {\n    const anyCharMaybeTrailingSlashRegex = \"[^/]+/?\";\n    const commonStringSubPath = escapeStrRegex(path.slice(lastIndex, index));\n\n    regexStr += inDynamic\n      ? anyCharMaybeTrailingSlashRegex\n      : commonStringSubPath;\n\n    if (index === path.length && !inDynamic) {\n      regexStr =\n        // use charAt instead as we could not use es6 method endsWith\n        regexStr.charAt(regexStr.length - 1) === \"/\"\n          ? `${regexStr}.*$`\n          : `${regexStr}([/#].*)?$`;\n    }\n\n    inDynamic = !inDynamic;\n    lastIndex = index;\n  }\n\n  function escapeStrRegex(str) {\n    // borrowed from https://github.com/sindresorhus/escape-string-regexp/blob/master/index.js\n    return str.replace(/[|\\\\{}()[\\]^$+*?.]/g, \"\\\\$&\");\n  }\n}\n","import CustomEvent from \"custom-event\";\nimport { isStarted } from \"../start.js\";\nimport { toLoadPromise } from \"../lifecycles/load.js\";\nimport { toBootstrapPromise } from \"../lifecycles/bootstrap.js\";\nimport { toMountPromise } from \"../lifecycles/mount.js\";\nimport { toUnmountPromise } from \"../lifecycles/unmount.js\";\nimport {\n  getAppStatus,\n  getAppChanges,\n  getMountedApps,\n} from \"../applications/apps.js\";\nimport { callCapturedEventListeners } from \"./navigation-events.js\";\nimport { toUnloadPromise } from \"../lifecycles/unload.js\";\nimport {\n  toName,\n  shouldBeActive,\n  NOT_MOUNTED,\n  MOUNTED,\n  NOT_LOADED,\n  SKIP_BECAUSE_BROKEN,\n} from \"../applications/app.helpers.js\";\n\nlet appChangeUnderway = false,\n  peopleWaitingOnAppChange = [];\n\nexport function triggerAppChange() {\n  // Call reroute with no arguments, intentionally\n  return reroute();\n}\n\nexport function reroute(pendingPromises = [], eventArguments) {\n  if (appChangeUnderway) {\n    return new Promise((resolve, reject) => {\n      peopleWaitingOnAppChange.push({\n        resolve,\n        reject,\n        eventArguments,\n      });\n    });\n  }\n\n  const {\n    appsToUnload,\n    appsToUnmount,\n    appsToLoad,\n    appsToMount,\n  } = getAppChanges();\n  let appsThatChanged;\n\n  if (isStarted()) {\n    appChangeUnderway = true;\n    appsThatChanged = appsToUnload.concat(\n      appsToLoad,\n      appsToUnmount,\n      appsToMount\n    );\n    return performAppChanges();\n  } else {\n    appsThatChanged = appsToLoad;\n    return loadApps();\n  }\n\n  function loadApps() {\n    return Promise.resolve().then(() => {\n      const loadPromises = appsToLoad.map(toLoadPromise);\n\n      return (\n        Promise.all(loadPromises)\n          .then(callAllEventListeners)\n          // there are no mounted apps, before start() is called, so we always return []\n          .then(() => [])\n          .catch((err) => {\n            callAllEventListeners();\n            throw err;\n          })\n      );\n    });\n  }\n\n  function performAppChanges() {\n    return Promise.resolve().then(() => {\n      // https://github.com/single-spa/single-spa/issues/545\n      window.dispatchEvent(\n        new CustomEvent(\n          appsThatChanged.length === 0\n            ? \"single-spa:before-no-app-change\"\n            : \"single-spa:before-app-change\",\n          getCustomEventDetail(true)\n        )\n      );\n\n      window.dispatchEvent(\n        new CustomEvent(\n          \"single-spa:before-routing-event\",\n          getCustomEventDetail(true)\n        )\n      );\n      const unloadPromises = appsToUnload.map(toUnloadPromise);\n\n      const unmountUnloadPromises = appsToUnmount\n        .map(toUnmountPromise)\n        .map((unmountPromise) => unmountPromise.then(toUnloadPromise));\n\n      const allUnmountPromises = unmountUnloadPromises.concat(unloadPromises);\n\n      const unmountAllPromise = Promise.all(allUnmountPromises);\n\n      unmountAllPromise.then(() => {\n        window.dispatchEvent(\n          new CustomEvent(\n            \"single-spa:before-mount-routing-event\",\n            getCustomEventDetail(true)\n          )\n        );\n      });\n\n      /* We load and bootstrap apps while other apps are unmounting, but we\n       * wait to mount the app until all apps are finishing unmounting\n       */\n      const loadThenMountPromises = appsToLoad.map((app) => {\n        return toLoadPromise(app).then((app) =>\n          tryToBootstrapAndMount(app, unmountAllPromise)\n        );\n      });\n\n      /* These are the apps that are already bootstrapped and just need\n       * to be mounted. They each wait for all unmounting apps to finish up\n       * before they mount.\n       */\n      const mountPromises = appsToMount\n        .filter((appToMount) => appsToLoad.indexOf(appToMount) < 0)\n        .map((appToMount) => {\n          return tryToBootstrapAndMount(appToMount, unmountAllPromise);\n        });\n      return unmountAllPromise\n        .catch((err) => {\n          callAllEventListeners();\n          throw err;\n        })\n        .then(() => {\n          /* Now that the apps that needed to be unmounted are unmounted, their DOM navigation\n           * events (like hashchange or popstate) should have been cleaned up. So it's safe\n           * to let the remaining captured event listeners to handle about the DOM event.\n           */\n          callAllEventListeners();\n\n          return Promise.all(loadThenMountPromises.concat(mountPromises))\n            .catch((err) => {\n              pendingPromises.forEach((promise) => promise.reject(err));\n              throw err;\n            })\n            .then(finishUpAndReturn);\n        });\n    });\n  }\n\n  function finishUpAndReturn() {\n    const returnValue = getMountedApps();\n    pendingPromises.forEach((promise) => promise.resolve(returnValue));\n\n    try {\n      const appChangeEventName =\n        appsThatChanged.length === 0\n          ? \"single-spa:no-app-change\"\n          : \"single-spa:app-change\";\n      window.dispatchEvent(\n        new CustomEvent(appChangeEventName, getCustomEventDetail())\n      );\n      window.dispatchEvent(\n        new CustomEvent(\"single-spa:routing-event\", getCustomEventDetail())\n      );\n    } catch (err) {\n      /* We use a setTimeout because if someone else's event handler throws an error, single-spa\n       * needs to carry on. If a listener to the event throws an error, it's their own fault, not\n       * single-spa's.\n       */\n      setTimeout(() => {\n        throw err;\n      });\n    }\n\n    /* Setting this allows for subsequent calls to reroute() to actually perform\n     * a reroute instead of just getting queued behind the current reroute call.\n     * We want to do this after the mounting/unmounting is done but before we\n     * resolve the promise for the `reroute` function.\n     */\n    appChangeUnderway = false;\n\n    if (peopleWaitingOnAppChange.length > 0) {\n      /* While we were rerouting, someone else triggered another reroute that got queued.\n       * So we need reroute again.\n       */\n      const nextPendingPromises = peopleWaitingOnAppChange;\n      peopleWaitingOnAppChange = [];\n      reroute(nextPendingPromises);\n    }\n\n    return returnValue;\n  }\n\n  /* We need to call all event listeners that have been delayed because they were\n   * waiting on single-spa. This includes haschange and popstate events for both\n   * the current run of performAppChanges(), but also all of the queued event listeners.\n   * We want to call the listeners in the same order as if they had not been delayed by\n   * single-spa, which means queued ones first and then the most recent one.\n   */\n  function callAllEventListeners() {\n    pendingPromises.forEach((pendingPromise) => {\n      callCapturedEventListeners(pendingPromise.eventArguments);\n    });\n\n    callCapturedEventListeners(eventArguments);\n  }\n\n  function getCustomEventDetail(isBeforeChanges = false) {\n    const newAppStatuses = {};\n    const appsByNewStatus = {\n      // for apps that were mounted\n      [MOUNTED]: [],\n      // for apps that were unmounted\n      [NOT_MOUNTED]: [],\n      // apps that were forcibly unloaded\n      [NOT_LOADED]: [],\n      // apps that attempted to do something but are broken now\n      [SKIP_BECAUSE_BROKEN]: [],\n    };\n\n    if (isBeforeChanges) {\n      appsToLoad.concat(appsToMount).forEach((app, index) => {\n        addApp(app, MOUNTED);\n      });\n      appsToUnload.forEach((app) => {\n        addApp(app, NOT_LOADED);\n      });\n      appsToUnmount.forEach((app) => {\n        addApp(app, NOT_MOUNTED);\n      });\n    } else {\n      appsThatChanged.forEach((app) => {\n        addApp(app);\n      });\n    }\n\n    return {\n      detail: {\n        newAppStatuses,\n        appsByNewStatus,\n        totalAppChanges: appsThatChanged.length,\n        originalEvent: eventArguments?.[0],\n      },\n    };\n\n    function addApp(app, status) {\n      const appName = toName(app);\n      status = status || getAppStatus(appName);\n      newAppStatuses[appName] = status;\n      const statusArr = (appsByNewStatus[status] =\n        appsByNewStatus[status] || []);\n      statusArr.push(appName);\n    }\n  }\n}\n\n/**\n * Let's imagine that some kind of delay occurred during application loading.\n * The user without waiting for the application to load switched to another route,\n * this means that we shouldn't bootstrap and mount that application, thus we check\n * twice if that application should be active before bootstrapping and mounting.\n * https://github.com/single-spa/single-spa/issues/524\n */\nfunction tryToBootstrapAndMount(app, unmountAllPromise) {\n  if (shouldBeActive(app)) {\n    return toBootstrapPromise(app).then((app) =>\n      unmountAllPromise.then(() =>\n        shouldBeActive(app) ? toMountPromise(app) : app\n      )\n    );\n  } else {\n    return unmountAllPromise.then(() => app);\n  }\n}\n","import { reroute } from \"./navigation/reroute.js\";\nimport { formatErrorMessage } from \"./applications/app-errors.js\";\nimport { setUrlRerouteOnly } from \"./navigation/navigation-events.js\";\nimport { isInBrowser } from \"./utils/runtime-environment.js\";\n\nlet started = false;\n\nexport function start(opts) {\n  started = true;\n  if (opts && opts.urlRerouteOnly) {\n    setUrlRerouteOnly(opts.urlRerouteOnly);\n  }\n  if (isInBrowser) {\n    reroute();\n  }\n}\n\nexport function isStarted() {\n  return started;\n}\n\nif (isInBrowser) {\n  setTimeout(() => {\n    if (!started) {\n      console.warn(\n        formatErrorMessage(\n          1,\n          __DEV__ &&\n            `singleSpa.start() has not been called, 5000ms after single-spa was loaded. Before start() is called, apps can be declared and loaded, but not bootstrapped or mounted.`\n        )\n      );\n    }\n  }, 5000);\n}\n","import { getRawAppData, unregisterApplication } from \"../applications/apps\";\nimport { reroute } from \"../navigation/reroute\";\nimport { NOT_LOADED } from \"../applications/app.helpers\";\nimport { toLoadPromise } from \"../lifecycles/load\";\nimport { toBootstrapPromise } from \"../lifecycles/bootstrap\";\n\nexport default {\n  getRawAppData,\n  reroute,\n  NOT_LOADED,\n  toLoadPromise,\n  toBootstrapPromise,\n  unregisterApplication,\n};\n","export { start } from \"./start.js\";\nexport { ensureJQuerySupport } from \"./jquery-support.js\";\nexport {\n  setBootstrapMaxTime,\n  setMountMaxTime,\n  setUnmountMaxTime,\n  setUnloadMaxTime,\n} from \"./applications/timeouts.js\";\nexport {\n  registerApplication,\n  getMountedApps,\n  getAppStatus,\n  unloadApplication,\n  checkActivityFunctions,\n  getAppNames,\n  pathToActiveWhen,\n} from \"./applications/apps.js\";\nexport { navigateToUrl } from \"./navigation/navigation-events.js\";\nexport { triggerAppChange } from \"./navigation/reroute.js\";\nexport {\n  addErrorHandler,\n  removeErrorHandler,\n} from \"./applications/app-errors.js\";\nexport { mountRootParcel } from \"./parcels/mount-parcel.js\";\n\nexport {\n  NOT_LOADED,\n  LOADING_SOURCE_CODE,\n  NOT_BOOTSTRAPPED,\n  BOOTSTRAPPING,\n  NOT_MOUNTED,\n  MOUNTING,\n  UPDATING,\n  LOAD_ERROR,\n  MOUNTED,\n  UNMOUNTING,\n  SKIP_BECAUSE_BROKEN,\n} from \"./applications/app.helpers.js\";\n\nimport devtools from \"./devtools/devtools\";\nimport { isInBrowser } from \"./utils/runtime-environment.js\";\n\nif (isInBrowser && window.__SINGLE_SPA_DEVTOOLS__) {\n  window.__SINGLE_SPA_DEVTOOLS__.exposedMethods = devtools;\n}\n"],"names":["NativeCustomEvent","CustomEvent","p","detail","foo","type","e","useNative","document","createEvent","params","initCustomEvent","bubbles","cancelable","createEventObject","Boolean","errorHandlers","handleAppError","err","app","newStatus","transformedErr","transformErr","length","forEach","handler","setTimeout","addErrorHandler","Error","formatErrorMessage","push","removeErrorHandler","removedSomething","filter","h","isHandler","code","msg","args","join","ogErr","appOrParcel","result","errPrefix","objectType","toName","status","message","console","warn","JSON","stringify","appOrParcelName","NOT_LOADED","LOADING_SOURCE_CODE","NOT_BOOTSTRAPPED","BOOTSTRAPPING","NOT_MOUNTED","MOUNTING","MOUNTED","UPDATING","UNMOUNTING","LOAD_ERROR","SKIP_BECAUSE_BROKEN","isActive","shouldBeActive","activeWhen","window","location","name","isParcel","unmountThisParcel","assign","i","arguments","key","find","arr","func","validLifecycleFn","fn","Array","isArray","item","flattenFnArray","lifecycle","fns","Promise","resolve","props","reduce","resultPromise","index","then","thisPromise","smellsLikeAPromise","reject","promise","catch","toBootstrapPromise","hardFail","reasonableTime","toUnmountPromise","unmountChildrenParcels","Object","keys","parcels","map","parcelId","all","unmountAppOrParcel","parcelError","parentError","beforeFirstMountFired","firstMountFired","toMountPromise","dispatchEvent","setSkipBecauseBroken","parcelCount","rootParcels","mountRootParcel","mountParcel","apply","config","customProps","owningAppOrParcel","this","_typeof","domElement","externalRepresentation","id","passedConfigLoadingFunction","configLoadingFunction","parcel","parentName","value","resolveUnmount","rejectUnmount","loadPromise","bootstrapPromise","bootstrap","mount","unmount","update","timeouts","ensureValidAppTimeouts","promiseWithoutReturnValue","toUpdatePromise","mountPromise","unmountPromise","getStatus","getProps","bind","singleSpa","unmountSelf","globalTimeoutConfig","millis","dieOnTimeout","warningMillis","unload","setBootstrapMaxTime","time","setMountMaxTime","setUnmountMaxTime","setUnloadMaxTime","timeoutConfig","warningPeriod","finished","errored","val","maybeTimingOut","errMsg","shouldError","error","numWarnings","numMillis","toLoadPromise","loadApp","isUserErr","validationErrCode","loadErrorTime","appOpts","appOptsStr","validationErrMessage","devtools","overlays","Date","getTime","urlRerouteOnly","isInBrowser","capturedEventListeners","hashchange","popstate","routingEventsListeningTo","navigateToUrl","obj","url","href","currentTarget","preventDefault","current","parseUri","destination","indexOf","hash","host","pathname","search","history","pushState","callCapturedEventListeners","eventArguments","eventType","listener","_this","urlReroute","reroute","patchedUpdateState","updateState","methodName","urlBefore","urlAfter","createPopStateEvent","state","originalMethodName","evt","PopStateEvent","initPopStateEvent","singleSpaTrigger","addEventListener","originalAddEventListener","originalRemoveEventListener","removeEventListener","eventName","listenerFn","replaceState","singleSpaNavigate","str","anchor","createElement","hasInitialized","ensureJQuerySupport","jQuery","$","jquery","originalJQueryOn","on","originalJQueryOff","off","eventString","captureRoutingEvents","call","originalJQueryFunction","nativeFunctionToCall","originalArgs","split","replace","trim","appsToUnload","toUnloadPromise","unloadInfo","finishUnloadingApp","errorUnloadingApp","addAppToUnload","promiseGetter","defineProperty","get","getAppUnloadInfo","appName","apps","getAppChanges","appsToUnmount","appsToLoad","appsToMount","currentTime","appShouldBeActive","getMountedApps","getAppNames","getAppStatus","registerApplication","appNameOrConfig","appOrLoadApp","registration","validKeys","invalidKeys","prop","concat","allowsStringAndFunction","every","validCustomProps","validateRegisterWithConfig","validateRegisterWithArguments","sanitizeCustomProps","activeWhenArray","activeWhenOrPath","pathToActiveWhen","some","sanitizeActiveWhen","sanitizeArguments","options","selectors","checkActivityFunctions","unloadApplication","opts","waitForUnmount","App","appUnloadInfo","immediatelyUnloadApp","path","regex","lastIndex","inDynamic","regexStr","charIndex","char","appendToRegex","RegExp","commonStringSubPath","slice","charAt","toDynamicPathValidatorRegex","route","origin","test","appChangeUnderway","peopleWaitingOnAppChange","triggerAppChange","pendingPromises","appsThatChanged","isStarted","performAppChanges","loadApps","loadPromises","callAllEventListeners","getCustomEventDetail","unloadPromises","allUnmountPromises","unmountAllPromise","loadThenMountPromises","tryToBootstrapAndMount","mountPromises","appToMount","finishUpAndReturn","returnValue","appChangeEventName","nextPendingPromises","pendingPromise","isBeforeChanges","newAppStatuses","appsByNewStatus","addApp","totalAppChanges","originalEvent","started","start","getRawAppData","unregisterApplication","appIndex","splice","__SINGLE_SPA_DEVTOOLS__","exposedMethods"],"mappings":"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"}